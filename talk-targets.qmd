---
title: "Automatic Pipelines with {targets}"
author: "Anders Askeland"
format: 
  revealjs:
    mermaid:
      theme: forest
---

## What is a data analysis "pipeline"?

::: columns
::: {.column width="60%"}
![](images/factory.png)
:::

::: {.column width="30%"}
```{mermaid}
graph TB
  clean_data[Clean data&nbsp]
  subgraph Data
  raw_data[Raw data&nbsp] -- Function&nbsp --> clean_data
  end
  subgraph Analysis
  clean_data -- Function&nbsp --> output_1[Analysis</br>table]
  clean_data -- Function&nbsp --> output_2[Plot]

  end
  output_1 --> presentation[Manuscript]
  output_2 --> presentation[Manuscript]

```
:::
:::

::: notes
-   Concept
    - Car factory
    - Covid testing
-   Data analysis pipeline
-   Formal vs non-formal
  - Non-formal. You manually decide what to re-run. This is what we usually do.
  - Formal.
-   Reproducibility
-   Functional programming - Works very well with this.
:::

## What is {targets}?
::: columns
::: {.column width="60%" .incremental}
-   Pipeline tool
-   R package
-   Ecosystem (targetopia)


:::

::: {.column width="30%"}
![](images/targets_logo.svg)

:::
:::



::: notes
-  Formal pipeline tool
-  What does this mean? - Various systems that helps us
   - Dependency management
   - Caching
   - Visualization of workflows
-  R package
-  Ecosystem (targetopia)
   - Tachetypes (complex stuff simplified)
   - Stan / basiyan statistics
   - Extend youself
:::

## Why {targets}?
::: columns
::: {.column width="60%" .incremental}
-   First R based pipeline implementation
-   Reproducibility
-   Demanding computation
-   Parallel Computing
-   And more...
:::

::: {.column width="30%"}
![](images/question.png)

:::
:::



::: notes
-  First R based tool
   - Also Drake. Pipeline tool, but more limited. Same author.
-  Use cases - Not only because its cool
  - Main sales pitch - Reproducible, readable, and code-based data analysis
  - Demanding computation
  - Parallel computing
  - More...
   - Dynamic branching

:::

## How to use {targets}?
::: {.incremental}

-   Setup targets (`_targets` file)

  ```{.r .incremental}
  targets::use_targets()
  ```
-   Run pipeline
  ```{.r}
  targets::tar_make()
  ```
-   Visualize pipeline
  ```{.r}
  targets::tar_visualnetwork()
  ```
:::

::: notes
-  Three main functions
   
:::


## Let's do some coding...

::: columns
::: {.column width="60%"}
Plot

-   TODO
:::

::: {.column width="30%"}
Analysis

-   TODO
:::
:::


::: notes
-  Setup targets & explain file
  - A lot of setup
  - Targets pipeline inside list 
-  What should we do
  - Create this presentation into a pipeline
-  Data
   - Show pipeline files
-  Analysis
   - 
-  
:::

